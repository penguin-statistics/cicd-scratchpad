name: Build Docker Image (Release)

on:
  push:
    # trigger on version tag push
    tags:
      - "v*"

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Get Tag Version"
        id: get_version
        run: |
          export TRUNCATED_GITHUB_SHA=$(echo ${{ github.sha }} | cut -c1-7);
          echo "VERSION=${GITHUB_REF/refs\/tags\//}+${TRUNCATED_GITHUB_SHA}" >> $GITHUB_ENV
      
      - name: "Docker: Setup Buildx"
        uses: docker/setup-buildx-action@v2
      
      - name: "Docker: Login to GitHub Container Registry"
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "Docker: Metadata"
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/penguin-statistics/cicd-scratchpad
          tags: |
            type=semver,pattern=v{{version}}
            type=ref,event=branch
            type=ref,event=pr
          flavor: |
            latest=auto
      
      - name: "Docker: Build and Push Image"
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=ghcr.io/penguin-statistics/cicd-scratchpad:buildcache
          cache-to: type=registry,ref=ghcr.io/penguin-statistics/cicd-scratchpad:buildcache,mode=max
          build-args: |
            VERSION=${{ env.VERSION }}

      - name: "GitHub: Create Repository Release"
        uses: "marvinpinto/action-automatic-releases@v1.2.1"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
      
      - name: "ManifestBot: Update Manifest"
        uses: "penguin-statistics/manifestbot@v6"
        with:
          file-path: 'applications/cicd-scratchpad/manifest.json'
          version-path: 'image.tag'
          version: ${{ env.AUTOMATIC_RELEASES_TAG }}
          token: ${{ secrets.PAT_FOR_MANIFESTBOT }}
